<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Till's blog</title><link>http://tifrel.github.io/</link><description>Recent content on Till's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 20 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://tifrel.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello, World!</title><link>http://tifrel.github.io/posts/hello-world/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tifrel.github.io/posts/hello-world/</guid><description>Welcome to my blog, where I will write about Rust, Blockchain development, probably some other nerdy stuff, and just things that spark my interest.
I am Till, and I recently made a career out of my long-held programming hobby. Since I find blockchains and everything Web3 to be fascinating technology that aligns a lot with how I feel things should be designed (decentralization, Peer-to-peer), I decided to make my entry just there and also to start blogging about what I learn.</description></item><item><title>Build on NEAR: Getting started (part 0)</title><link>http://tifrel.github.io/posts/build-on-near-0/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>http://tifrel.github.io/posts/build-on-near-0/</guid><description>So you know how to build with Rust, or have experience with smart contracts, now you want to build on NEAR? This series is for you. I will do my best to explain blockchain concepts and advanced Rust whenever I can, and whenever I feel that it&amp;rsquo;s necessary. Following topics will be covered:
Interacting with the NEAR network, for which you will need an account and should have a look at the NEAR CLI tool (this post) Building smart contracts, testing them, and deploying them to a testing network Integration testing, storage migration, redeployments Gas costs and profiling, cross-contract calling, simulation testing, mainnet Indexing, testing the indexer, storage migrations and indexing Smart contracts standards for the NEAR ecosystem Let&amp;rsquo;s kickstart this series by getting you a NEAR account.</description></item></channel></rss>